// ------------------ ORM -----------

ORM stands for Object-Relational Mapping. It is a programming technique used to map and manage data between an 
object-oriented programming language (like JavaScript, Python, or Java) and a relational database (like MySQL, PostgreSQL, 
or SQLite).

An ORM tool allows developers to interact with a database using the programming language's syntax instead of writing raw 
SQL queries. It simplifies database operations by representing tables as classes and rows as objects, making data 
manipulation more intuitive for developers.

Benefits of ORM:
Abstraction from SQL: Developers work with objects and methods instead of writing raw SQL queries.
Improved productivity: Reduces boilerplate code and simplifies database interactions.
Database independence: Many ORMs allow switching between different databases with minimal code changes.
Code readability: Makes database operations more understandable by representing data as objects.
Built-in query optimization: Some ORMs handle query optimization internally.
Popular ORM Tools:
JavaScript/TypeScript: Sequelize, TypeORM, Prisma
Python: SQLAlchemy, Django ORM
Java: Hibernate
Ruby: Active Record (part of Ruby on Rails)
PHP: Doctrine, Eloquent (part of Laravel)