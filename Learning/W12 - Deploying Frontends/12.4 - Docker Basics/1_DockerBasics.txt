This is just an introduction of docker, we'll learn more on next coming classes.

---------------------- Docker ----------------------

Docker lets you do lots of things, 

1. It lets you containerise your applications.
2. It lets you run other people's code+packages in your machine.
3. It lets you run common software packages inside a container (for eg.- Mongo, Postgres, etc).


Container -> They are mini machines with their own file system and network.


-----------------------------------------------------
Creating Mongodb/Postgres containers.

Just like you can push your code to github.
You can push images to docker registries. 

popular registries are:
dockerhub - the official 
aws registries
google registries


basic commmands:
```
docker run 
docker ps 
docker kill
```

------- commands to create container -

----- Mongo ----

1. run the images :
```
docker run mongo 
```

it will run on port 27017. 

2. map the port
```
docker run -p 27017:27017 mongo
```


-------- Postgres -------------

1. run the image:
```
docker run -e POSTGRES_PASSWORD=mysecretpassword -d -p 5432:5432 postgres
```

or 
```
docker run --name postgres-container -e POSTGRES_PASSWORD=yourpassword -d -p 5432:5432 postgres
```

where
--name postgres-container: The name of your container.
-e POSTGRES_PASSWORD=yourpassword: Sets the password for the postgres user.
-d: Runs the container in detached mode.
-p 5432:5432: Maps port 5432 of your host machine to the container.
postgres: The official PostgreSQL image.

-----

the connection string would be:
postgresql://postgres:mysecretpassword@localhost:5432/postgres


2. to go through the container, and use bash commands
```
docker exec -it id_of_postgres_container /bin/bash
```

3. now, to connect to the postgres through bash commands
```
psql -h localhost -d postgres -U postgres
```

now, you can run psql commands there, without installing it.


-----------------------------------------------------





